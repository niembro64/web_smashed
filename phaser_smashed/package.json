{
  "name": "create-react-phaser3-app",
  "version": "0.1.0",
  "homepage": "./",
  "private": true,
  "main": "build/electron.js",
  "dependencies": {
    "@fontsource/press-start-2p": "^4.5.10",
    "@testing-library/jest-dom": "^5.14.1",
    "@testing-library/react": "^12.0.0",
    "@testing-library/user-event": "^13.2.1",
    "@types/jest": "^27.0.1",
    "@types/node": "^16.7.13",
    "@types/react": "^17.0.20",
    "@types/react-dom": "^17.0.9",
    "axios": "^1.4.0",
    "brain.js": "^2.0.0-beta.23",
    "html2canvas": "^1.4.1",
    "moment": "^2.29.4",
    "moment-timezone": "^0.5.41",
    "phaser": "3.55.2",
    "phaser3-rex-plugins": "^1.1.79",
    "react": "17.0.2",
    "react-dom": "^17.0.2",
    "react-ga4": "^2.1.0",
    "react-howler": "^5.2.0",
    "react-router-dom": "^5.3.3",
    "react-scripts": "5.0.0",
    "react-tooltip": "^5.28.0",
    "typescript": "^4.4.2",
    "use-sound": "^4.0.1",
    "web-vitals": "^2.1.0"
  },
  "scripts": {
    "start": "react-scripts start",
    "build": "react-scripts build",
    "build:web": "react-scripts build",
    "postbuild": "node -e \"const fs=require('fs');const path=require('path');const src='public/electron.js';const dst='build/electron.js';fs.copyFileSync(src,dst);console.log('Copied',src,'to',dst);const indexSrc='build/index.html';const indexDst='build/app.html';fs.copyFileSync(indexSrc,indexDst);console.log('Copied index.html to app.html as backup');const soundSrc='public/sounds';const soundDst='build/sounds';if(!fs.existsSync(soundDst)){fs.mkdirSync(soundDst,{recursive:true})};try{fs.readdirSync(soundSrc).forEach(file=>{const srcPath=path.join(soundSrc,file);const dstPath=path.join(soundDst,file);if(fs.statSync(srcPath).isFile()){fs.copyFileSync(srcPath,dstPath);console.log('Copied',srcPath,'to',dstPath);}else if(fs.statSync(srcPath).isDirectory()){const subDir=path.join(soundDst,file);if(!fs.existsSync(subDir)){fs.mkdirSync(subDir,{recursive:true})};fs.readdirSync(srcPath).forEach(subFile=>{const subSrcPath=path.join(srcPath,subFile);const subDstPath=path.join(subDir,subFile);if(fs.statSync(subSrcPath).isFile()){fs.copyFileSync(subSrcPath,subDstPath);console.log('Copied',subSrcPath,'to',subDstPath);}});}});}catch(e){console.error('Error copying sounds:',e)};const imgSrc='public/images';const imgDst='build/images';if(!fs.existsSync(imgDst)){fs.mkdirSync(imgDst,{recursive:true})};fs.readdirSync(imgSrc).forEach(file=>{const srcPath=path.join(imgSrc,file);const dstPath=path.join(imgDst,file);if(fs.statSync(srcPath).isFile()){fs.copyFileSync(srcPath,dstPath);console.log('Copied',srcPath,'to',dstPath);}});\"",
    "start:electron": "yarn build:web && electron .",
    "clean:win": "node -e \"const fs=require('fs');const path=require('path');const distPath=path.join(__dirname,'dist');console.log('Cleaning',distPath);if(fs.existsSync(distPath)){fs.rmSync(distPath,{recursive:true,force:true});console.log('Cleaned dist directory');}else{console.log('Dist directory does not exist');}\"",
    "pack": "electron-builder --dir",
    "dist": "yarn build:web && electron-builder",
    "dist:win": "yarn build:web && electron-builder --win --config.win.target=portable --config.forceCodeSigning=false",
    "dist:win:clean": "yarn clean:win && yarn dist:win",
    "dist:mac": "yarn build:web && electron-builder --mac",
    "prod": "yarn build:web && electron .",
    "test": "react-scripts test",
    "eject": "react-scripts eject"
  },
  "build": {
    "appId": "com.yourcompany.yourgame",
    "productName": "Smashed",
    "files": [
      "build/**/*"
    ],
    "directories": {
      "buildResources": "assets",
      "output": "dist"
    },
    "asar": false,
    "win": {
      "target": "portable",
      "icon": "public/images/character_0.png",
      "artifactName": "${productName}-${version}-portable.${ext}",
      "publisherName": "Smashed"
    },
    "mac": {
      "target": "dmg",
      "icon": "public/images/character_0.png"
    },
    "nsis": {
      "oneClick": false,
      "allowToChangeInstallationDirectory": true,
      "perMachine": false,
      "differentialPackage": false
    },
    "extraResources": [
      {
        "from": "build/images",
        "to": "images"
      },
      {
        "from": "build/sounds",
        "to": "sounds"
      }
    ]
  },
  "eslintConfig": {
    "extends": [
      "react-app",
      "react-app/jest"
    ]
  },
  "browserslist": {
    "production": [
      ">0.2%",
      "not dead",
      "not op_mini all"
    ],
    "development": [
      "last 1 chrome version",
      "last 1 firefox version",
      "last 1 safari version"
    ]
  },
  "devDependencies": {
    "@types/body-parser": "^1.19.5",
    "@types/react-howler": "^5.2.0",
    "@types/react-router-dom": "^5.3.3",
    "autoprefixer": "^10.4.20",
    "electron": "^35.1.5",
    "electron-builder": "^24.3.0",
    "postcss": "^8.5.1",
    "tailwindcss": "^3.4.17"
  }
}
